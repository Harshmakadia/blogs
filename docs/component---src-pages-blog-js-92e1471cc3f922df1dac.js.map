{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/Blog/Tags.js","webpack:///./src/components/slugify.js","webpack:///./src/components/Blog/BlogCard.js","webpack:///./src/hooks/useRandomBlogPost.js","webpack:///./src/components/Blog/BlogLayout.js"],"names":["BlogPage","blogposts","title","allMarkdownRemark","edges","map","node","key","id","slug","fields","frontmatter","date","tags","readtime","timeToRead","excerpt","TagBreadcrumb","styled","Link","p","theme","dark","primaryColor","Tags","style","overflow","group","tag","fieldValue","to","slugify","module","exports","str","match","x","toLowerCase","join","PostWrapper","article","accentColor","shadowSmall","secondaryColor","BlogDateAndReadTime","fontSize","color","icon","BlogCard","marginTop","useRandomBlogPost","min","max","randomPost","totalCount","Math","floor","random","randomSlug","randomTitle","BlogLayout","children","sharerSection","SplitLayout","content","aside"],"mappings":"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","file":"component---src-pages-blog-js-92e1471cc3f922df1dac.js","sourcesContent":["import React from \"react\";\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Layout from \"src/components/Layout/Layout\"\nimport SEO from \"src/components/seo\";\n\nimport BlogCard from 'src/components/Blog/BlogCard';\nimport BlogLayout from 'src/components/Blog/BlogLayout';\n\nconst BlogPage = () => {\n   const blogposts = useStaticQuery(\n    graphql`\n      query blogPageQuery {\n        allMarkdownRemark(\n          filter: {fields: {posttype: {eq: \"blog\"}}}\n          sort: {fields: frontmatter___date, order: DESC}\n        ){\n          edges {\n            node {\n              id\n              timeToRead\n              frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\", locale: \"en\")\n                tags\n                excerpt\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  return (\n    <Layout>\n      <SEO title=\"Harsh Makadia - Portfolio\" />\n\n      <BlogLayout>\n        {\n          blogposts.allMarkdownRemark.edges.map(({ node }) => (\n            <BlogCard\n              key={node.id}\n              slug={node.fields.slug}\n              title={node.frontmatter.title}\n              date={node.frontmatter.date}\n              tags={node.frontmatter.tags}\n              readtime={node.timeToRead}\n              excerpt={node.frontmatter.excerpt}\n            />\n          ))\n        }\n      </BlogLayout>\n    </Layout>\n  )\n}\n\nexport default BlogPage\n","import React from \"react\";\nimport styled from 'styled-components';\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nimport slugify from 'src/components/slugify'\n\nexport const useTags = () => {\n  const tags = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(limit: 2000) {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n\n  return tags;\n}\n\nexport const TagBreadcrumb = styled(Link)`\n  float: left;\n  border: 1px solid ${p => p.theme.dark ? p.theme.primaryColor : '#d9e0ff'};\n  border-radius: 50px;\n  padding: 8px 13px;\n  line-height: 10px;\n  margin: 5px;\n  font-size: 12px;\n\n  &:hover {\n    background: ${p => p.theme.dark ? p.theme.primaryColor : '#d9e0ff'};\n    color: ${p => p.theme.dark ? '#d9e0ff' : '#6D83F2'};\n  }\n`\n\nconst Tags = () => {\n  const tags = useTags();\n\n  return (\n    <section style={{ overflow: 'auto' }}>\n      {tags.allMarkdownRemark.group.map(tag => (\n        <TagBreadcrumb key={tag.fieldValue} to={`/blog/tags/${slugify(tag.fieldValue)}/`}>\n          {/* {tag.fieldValue}, {tag.totalCount} */}\n          {tag.fieldValue}\n        </TagBreadcrumb>\n      ))}\n    </section>\n  )\n}\n\nexport default Tags","const slugify = str =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join('-');\n\nmodule.exports = slugify\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\n\nimport Link from \"gatsby-link\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport { TagBreadcrumb } from './Tags';\nimport slugify from 'src/components/slugify';\n\nconst PostWrapper = styled.article`\n  overflow: auto;\n  margin-bottom: 70px;\n  /* margin-top: 100px; */\n  padding: 30px 30px;\n  border-top: 5px solid ${p => p.theme.dark ? p.theme.accentColor : p.theme.primaryColor};\n  border-radius: 10px;\n  box-shadow: ${p => p.theme.shadowSmall}; \n  background-color: ${p => p.theme.secondaryColor};\n\n  &:hover {\n    box-shadow: 0 5px 10px rgba(0,0,0,0.1);\n  }\n\n  span {\n    font-size: 13px;\n    color: gray;\n  }\n`\n\nexport const BlogDateAndReadTime = ({ date, readtime }) => (\n  <span style={{ fontSize: 13, color: \"gray\" }}>\n    <FontAwesomeIcon color=\"gray\" icon=\"calendar-alt\" />&nbsp;&nbsp;{date}\n    &nbsp;&nbsp;&nbsp;\n    <FontAwesomeIcon color=\"gray\" icon=\"clock\" />&nbsp;&nbsp;{readtime}min read\n  </span>\n)\n\nconst BlogCard = ({ date, readtime, title, excerpt, slug, tags }) => {\n  return (\n    <Link to={slug}>\n      <PostWrapper>\n        <BlogDateAndReadTime date={date} readtime={readtime} />\n\n        <h2>{title}</h2>\n        <p>{excerpt}</p>\n\n        <div style={{ marginTop: 20 }}>\n          {\n            tags.map(tag => (\n              <TagBreadcrumb key={tag} to={`/blog/tags/${slugify(tag)}/`}>{tag}</TagBreadcrumb>\n            ))\n          }\n        </div>\n      </PostWrapper>\n    </Link>\n\n  )\n}\n\n\nBlogDateAndReadTime.propTypes = {\n  date: PropTypes.string.isRequired,\n  readtime: PropTypes.number.isRequired\n}\n\nBlogCard.propTypes = {\n  date: PropTypes.string.isRequired,\n  readtime: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  tags: PropTypes.array.isRequired,\n}\nexport default BlogCard;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const randomGenerator = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nconst useRandomBlogPost = () => {\n  const blogposts = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(filter: {fields: {posttype: {eq: \"blog\"}}}){\n          edges {\n            node {\n              frontmatter {\n                title\n              }\n              fields {\n                slug\n              }\n            }\n          }\n          totalCount\n        }\n      }\n    `\n  )\n\n  const randomPost = blogposts.allMarkdownRemark.edges[\n    randomGenerator(\n      0,\n      blogposts.allMarkdownRemark.totalCount - 1\n    )\n  ];\n\n  return { randomSlug: randomPost.node.fields.slug, randomTitle: randomPost.node.frontmatter.title };\n}\nexport default useRandomBlogPost;\n","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\n\nimport Tags from 'src/components/Blog/Tags';\nimport SplitLayout from \"src/components/common/SplitLayout\";\nimport useRandomBlogPost from \"src/hooks/useRandomBlogPost\";\n\n\nconst BlogLayout = ({ children, sharerSection }) => {\n  const { randomSlug, randomTitle } = useRandomBlogPost();\n\n  \n  return (\n    <SplitLayout\n      content={children}\n      aside={\n        <>\n          <section>\n            <h4>Random post</h4>\n            <Link\n              style={{ fontSize: '16px' }}\n              to={randomSlug}\n            >\n              {randomTitle}\n            </Link>\n            <br /><br />\n          </section>\n          <section>\n            <h4>Explore tags</h4>\n            <Tags />\n            <br />\n          </section>\n          {sharerSection && sharerSection}\n        </>\n      }\n    />\n  )\n}\n\n\nBlogLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  sharerSection: PropTypes.node\n}\n\nexport default BlogLayout\n"],"sourceRoot":""}