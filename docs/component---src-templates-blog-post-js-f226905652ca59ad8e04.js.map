{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/Blog/Tags.js","webpack:///./src/components/slugify.js","webpack:///./src/components/Blog/BlogCard.js","webpack:///./src/hooks/useRandomBlogPost.js","webpack:///./src/components/Blog/BlogLayout.js","webpack:///./src/components/Blog/SocialShareSection.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./config/website.js"],"names":["require","query","BlogPost","data","pageContext","markdownRemark","frontmatter","title","date","folder","timeToRead","html","excerpt","ogimage","id","ogImagePath","childImageSharp","fixed","src","baseSlugUrl","siteUrl","slug","githubLink","isBlogPost","description","image","sharerSection","style","margin","fontSize","aria-label","rel","target","href","icon","readtime","className","dangerouslySetInnerHTML","__html","TagBreadcrumb","styled","Link","p","theme","dark","primaryColor","Tags","tags","overflow","allMarkdownRemark","group","map","tag","key","fieldValue","to","slugify","module","exports","str","match","x","toLowerCase","join","PostWrapper","article","accentColor","shadowSmall","secondaryColor","BlogDateAndReadTime","color","BlogCard","marginTop","useRandomBlogPost","min","max","blogposts","randomPost","edges","totalCount","Math","floor","random","randomSlug","node","fields","randomTitle","BlogLayout","children","SplitLayout","content","aside","SocialShareSection","fbShareLink","twShareLink","rdShareLink","createHTML","this","$export","fails","defined","quot","string","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","split","length","meta","siteTitle","siteDescription","siteTitleAlt","siteShortName","social","siteLogo","siteBanner","twitter","website","googleAnalyticsID","themeColor","backgroundColor"],"mappings":"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","file":"component---src-templates-blog-post-js-f226905652ca59ad8e04.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\"\n\nimport SEO from \"src/components/seo\";\nimport Layout from \"src/components/Layout/Layout\"\n\nimport BlogLayout from \"src/components/Blog/BlogLayout\";\nimport SocialShareSection from 'src/components/Blog/SocialShareSection';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { BlogDateAndReadTime } from \"src/components/Blog/BlogCard\";\n\nimport { siteUrl, disqusShortName } from '../../config/website';\nrequire(`katex/dist/katex.min.css`);\n\n\nconst BlogPost = ({ data, pageContext }) => {\n  const { title, date, folder } = data.markdownRemark.frontmatter;\n  const { timeToRead, html, excerpt, id } = data.markdownRemark;\n\n  const { ogimage } = data.markdownRemark.frontmatter\n  const ogImagePath = ogimage && ogimage.childImageSharp.fixed.src\n\n  const baseSlugUrl = siteUrl + pageContext.slug;\n  const disqusConfig = {\n    identifier: id,\n    title: title,\n    url: baseSlugUrl\n  }\n\n  const githubLink = `https://github.com/Harshmakadia/Harshmakadia.github.io/master/content${folder}/index.md`;\n\n  return (\n    <Layout>\n      <SEO isBlogPost title={title} description={excerpt} slug={pageContext.slug} image={ogImagePath}/>\n\n      <BlogLayout sharerSection={\n        <div>\n          <h4>Share on</h4>\n          <SocialShareSection baseSlugUrl={baseSlugUrl} title={title} />\n          <hr style={{ margin: '25px 0' }} />\n          <a\n            style={{ fontSize: '16px' }}\n            aria-label=\"Edit post on github\"\n            rel=\"noopener norefferer\"\n            target=\"__blank\"\n            href={githubLink}>\n            <FontAwesomeIcon style={{ fontSize: 18 }} icon=\"edit\" /> Edit post on GitHub\n          </a>\n        </div>\n      }>\n        <BlogDateAndReadTime date={date} readtime={timeToRead} />\n        <h1>{title}</h1>\n        <article className=\"markdown-content\" dangerouslySetInnerHTML={{ __html: html }} />\n      </BlogLayout>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostBySlug($slug : String!) {\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      excerpt\n      html\n      timeToRead\n      id\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\", locale: \"en\")\n        title\n        folder\n        ogimage {\n          childImageSharp {\n            fixed {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default BlogPost\n","import React from \"react\";\nimport styled from 'styled-components';\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nimport slugify from 'src/components/slugify'\n\nexport const useTags = () => {\n  const tags = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(limit: 2000) {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n\n  return tags;\n}\n\nexport const TagBreadcrumb = styled(Link)`\n  float: left;\n  border: 1px solid ${p => p.theme.dark ? p.theme.primaryColor : '#d9e0ff'};\n  border-radius: 50px;\n  padding: 8px 13px;\n  line-height: 10px;\n  margin: 5px;\n  font-size: 12px;\n\n  &:hover {\n    background: ${p => p.theme.dark ? p.theme.primaryColor : '#d9e0ff'};\n    color: ${p => p.theme.dark ? '#d9e0ff' : '#6D83F2'};\n  }\n`\n\nconst Tags = () => {\n  const tags = useTags();\n\n  return (\n    <section style={{ overflow: 'auto' }}>\n      {tags.allMarkdownRemark.group.map(tag => (\n        <TagBreadcrumb key={tag.fieldValue} to={`/blog/tags/${slugify(tag.fieldValue)}/`}>\n          {/* {tag.fieldValue}, {tag.totalCount} */}\n          {tag.fieldValue}\n        </TagBreadcrumb>\n      ))}\n    </section>\n  )\n}\n\nexport default Tags","const slugify = str =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join('-');\n\nmodule.exports = slugify\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\n\nimport Link from \"gatsby-link\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport { TagBreadcrumb } from './Tags';\nimport slugify from 'src/components/slugify';\n\nconst PostWrapper = styled.article`\n  overflow: auto;\n  margin-bottom: 70px;\n  /* margin-top: 100px; */\n  padding: 30px 30px;\n  border-top: 5px solid ${p => p.theme.dark ? p.theme.accentColor : p.theme.primaryColor};\n  border-radius: 10px;\n  box-shadow: ${p => p.theme.shadowSmall}; \n  background-color: ${p => p.theme.secondaryColor};\n\n  &:hover {\n    box-shadow: 0 5px 10px rgba(0,0,0,0.1);\n  }\n\n  span {\n    font-size: 13px;\n    color: gray;\n  }\n`\n\nexport const BlogDateAndReadTime = ({ date, readtime }) => (\n  <span style={{ fontSize: 13, color: \"gray\" }}>\n    <FontAwesomeIcon color=\"gray\" icon=\"calendar-alt\" />&nbsp;&nbsp;{date}\n    &nbsp;&nbsp;&nbsp;\n    <FontAwesomeIcon color=\"gray\" icon=\"clock\" />&nbsp;&nbsp;{readtime}min read\n  </span>\n)\n\nconst BlogCard = ({ date, readtime, title, excerpt, slug, tags }) => {\n  return (\n    <Link to={slug}>\n      <PostWrapper>\n        <BlogDateAndReadTime date={date} readtime={readtime} />\n\n        <h2>{title}</h2>\n        <p>{excerpt}</p>\n\n        <div style={{ marginTop: 20 }}>\n          {\n            tags.map(tag => (\n              <TagBreadcrumb key={tag} to={`/blog/tags/${slugify(tag)}/`}>{tag}</TagBreadcrumb>\n            ))\n          }\n        </div>\n      </PostWrapper>\n    </Link>\n\n  )\n}\n\n\nBlogDateAndReadTime.propTypes = {\n  date: PropTypes.string.isRequired,\n  readtime: PropTypes.number.isRequired\n}\n\nBlogCard.propTypes = {\n  date: PropTypes.string.isRequired,\n  readtime: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  tags: PropTypes.array.isRequired,\n}\nexport default BlogCard;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const randomGenerator = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nconst useRandomBlogPost = () => {\n  const blogposts = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(filter: {fields: {posttype: {eq: \"blog\"}}}){\n          edges {\n            node {\n              frontmatter {\n                title\n              }\n              fields {\n                slug\n              }\n            }\n          }\n          totalCount\n        }\n      }\n    `\n  )\n\n  const randomPost = blogposts.allMarkdownRemark.edges[\n    randomGenerator(\n      0,\n      blogposts.allMarkdownRemark.totalCount - 1\n    )\n  ];\n\n  return { randomSlug: randomPost.node.fields.slug, randomTitle: randomPost.node.frontmatter.title };\n}\nexport default useRandomBlogPost;\n","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\n\nimport Tags from 'src/components/Blog/Tags';\nimport SplitLayout from \"src/components/common/SplitLayout\";\nimport useRandomBlogPost from \"src/hooks/useRandomBlogPost\";\n\n\nconst BlogLayout = ({ children, sharerSection }) => {\n  const { randomSlug, randomTitle } = useRandomBlogPost();\n\n  \n  return (\n    <SplitLayout\n      content={children}\n      aside={\n        <>\n          <section>\n            <h4>Random post</h4>\n            <Link\n              style={{ fontSize: '16px' }}\n              to={randomSlug}\n            >\n              {randomTitle}\n            </Link>\n            <br /><br />\n          </section>\n          <section>\n            <h4>Explore tags</h4>\n            <Tags />\n            <br />\n          </section>\n          {sharerSection && sharerSection}\n        </>\n      }\n    />\n  )\n}\n\n\nBlogLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  sharerSection: PropTypes.node\n}\n\nexport default BlogLayout\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst SocialShareSection = ({ baseSlugUrl, title }) => {\n  const fbShareLink = `https://facebook.com/sharer/sharer.php?u=${baseSlugUrl}`;\n  const twShareLink = `http://twitter.com/share?text=\"${title}\" - &url=${baseSlugUrl}`;\n  const rdShareLink = `http://www.reddit.com/submit?url=${baseSlugUrl}&title=${title}`;\n\n  return (\n    <div className=\"blog__social-share\">\n      <a aria-label=\"share on facebook\" rel=\"noopener norefferer\" target=\"__blank\" href={fbShareLink}>\n        <FontAwesomeIcon style={{ fontSize: 24 }} icon={[\"fab\", \"facebook\"]} />\n      </a>\n      <a aria-label=\"share on twitter\" rel=\"noopener norefferer\" target=\"__blank\" href={twShareLink}>\n        <FontAwesomeIcon style={{ fontSize: 24 }} icon={[\"fab\", \"twitter\"]} />\n      </a>\n      <a aria-label=\"share on reddit\" rel=\"noopener norefferer\" target=\"__blank\" href={rdShareLink}>\n        <FontAwesomeIcon style={{ fontSize: 24 }} icon={[\"fab\", \"reddit\"]} />\n      </a>\n    </div>\n  )\n}\n\nSocialShareSection.propTypes = {\n  baseSlugUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default SocialShareSection;","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","const meta = {\n  // Metadata\n  siteTitle: 'Harsh Makadia - Data Science Portfolio',\n  siteDescription: 'Harsh Makadia - Portfolio.',\n  siteTitleAlt: 'Harsh Makadia',\n  siteShortName: 'Harsh Makadia',\n  siteUrl: 'https://harshmakadia.github.io', // No trailing slash!\n}\n\nconst social = {\n  siteLogo: `src/static/logo.svg`,\n  siteBanner: `${meta.siteUrl}/images/social-banner.png`,\n  twitter: '@Makadiaharsh',\n}\n\nconst website = {\n  ...meta,\n  ...social,\n  googleAnalyticsID: \"UA-135646134-1\",\n\n  // Manifest\n  themeColor: '#6D83F2',\n  backgroundColor: '#6D83F2',\n}\n\nmodule.exports = website"],"sourceRoot":""}